name: CI
on: push

jobs:
  Detect-Changes:
    runs-on: ubuntu-latest

    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      cypress: ${{ steps.filter.outputs.cypress }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Filter paths changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'apps/backend/**'
            frontend:
              - 'apps/frontend/**'
            cypress:
              - 'cypress/**'

  Build-Backend:
    if: needs.Detect-Changes.outputs.backend == 'true'
    needs: [Detect-Changes]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

  Build-Frontend:
    if: needs.Detect-Changes.outputs.frontend == 'true' && !failure()
    needs: [Build-Backend]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Deploy to vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}

  Purge-Cloudflare-Cache:
    if: always() && needs.Build-Frontend.result == 'success'
    needs: [Build-Frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Purge cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

      - name: Wait 30 seconds to purge cloudflare cache
        run: sleep 30s
        shell: bash

  E2E-Test:
    if: needs.Detect-Changes.outputs.backend == 'true' || needs.Detect-Changes.outputs.frontend == 'true' || needs.Detect-Changes.outputs.cypress == 'true'
    needs: [Purge-Cloudflare-Cache]
    runs-on: macos-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Test On Chrome
        uses: cypress-io/github-action@v4
        with:
          browser: chrome

      - name: Upload Test Videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Cypress Videos
          path: cypress/videos

      - name: Upload Test Screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Cypress Screenshots
          path: cypress/screenshots
