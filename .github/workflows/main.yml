name: instagram-clone

on:
  push:
    branches:
      - main

env:
  JWT_SECRET: jwt_secret
  FRONTEND_ORIGIN: http://localhost:3002
  NEXT_PUBLIC_INSTAGRAM_CLONE_API_URL: http://localhost:5001/graphql
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres?connect_timeout=300

jobs:
  Detect-Changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'apps/backend/**'
            frontend:
              - 'apps/frontend/!(cypress)/**'

  E2E-Test:
    # if: needs.Detect-Changes.outputs.backend == 'true' || needs.Detect-Changes.outputs.frontend == 'true'
    needs: [Detect-Changes]
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install packages
        uses: bahmutov/npm-install@v1
      - name: Seed database
        run: yarn prisma:init
        working-directory: apps/backend
      - name: Start backend app
        run: yarn dev
        working-directory: apps/backend
      - name: Test On Chrome
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          working-directory: apps/frontend
          start: yarn dev:next
      - name: Upload Test Videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Cypress Videos
          path: apps/frontend/cypress/videos

  Build-Backend:
    if: needs.Detect-Changes.outputs.backend == 'true'
    needs: [E2E-Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

  Build-Frontend:
    if: needs.Detect-Changes.outputs.frontend == 'true' && !failure()
    needs: [Build-Backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}

  Purge-Cloudflare-Cache:
    if: always() && needs.Build-Frontend.result == 'success'
    needs: [Build-Frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
