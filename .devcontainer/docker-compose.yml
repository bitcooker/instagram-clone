version: "3.8"

services:
  app:
    container_name: "app"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ..:/workspace:cached
      - extensions:/root/.vscode-server/extensions
      - frontend-node_modules:/workspace/apps/frontend/node_modules
      - backend-node_modules:/workspace/apps/backend/node_modules
      - common-node_modules:/workspace/node_modules
      - ~/.ssh:/root/.ssh
    command: sleep infinity
    network_mode: host
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres?schema=public
      - JWT_SECRET=jwt_secret
      - FRONTEND_ORIGIN=http://localhost:3002
      - E2E_BASE_URL=http://localhost:3002
      - NODE_ENV=development
      - NEXT_PUBLIC_INSTAGRAM_CLONE_API_URL=http://localhost:5001/graphql
      # cypress env
      - DISPLAY=:14
      - LIBGL_ALWAYS_INDIRECT=0
    volumes_from:
      - x11-bridge:rw
    depends_on:
      - x11-bridge

  db-dev:
    container_name: "db_dev"
    image: postgres:latest
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  x11-bridge:
    image: jare/x11-bridge:latest
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    ports:
      - "8080:8080"
    restart: always
    environment:
      MODE: tcp
      XPRA_HTML: "yes"
      DISPLAY: ":14"
      XPRA_TCP_PORT: "8080"
      XPRA_PASSWORD: "0526"

volumes:
  postgres-data:
  common-node_modules:
  frontend-node_modules:
  backend-node_modules:
  extensions:
